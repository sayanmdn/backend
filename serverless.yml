service: portfolio-backend

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: ap-south-1
  memorySize: 512
  timeout: 60
  logRetentionInDays: 14
  tracing:
    lambda: true
  environment:
    NODE_ENV: production
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: '*'

package:
  exclude:
    - src/**
    - "*.md"
    - "*.log"
    - .git/**
    - .gitignore
    - .env*
    - docker-compose.yml
    - Dockerfile
    - "*.zip"
    - lambda-package/**
    - node_modules/**/test/**
    - node_modules/**/tests/**
    - node_modules/**/*.md
    - node_modules/**/.travis.yml
    - node_modules/**/.npmignore
    - node_modules/**/LICENSE*
    - node_modules/**/CHANGELOG*
    - node_modules/**/README*
    - "*.heapsnapshot"

functions:
  simple-test:
    handler: dist/simple-test.handler
    events:
      - http:
          path: /test
          method: get
          cors: true
      - http:
          path: /test
          method: options
          cors: true
  app-api:
    handler: dist/index.handler
    events:
      - http:
          path: /
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - x-access-token
            allowCredentials: true
      - http:
          path: /{proxy+}
          method: any
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - x-access-token
            allowCredentials: true
    environment: ${file(env.json)}
